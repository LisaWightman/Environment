export LC_CTYPE=en_US.UTF-8
export TZ="US/Mountain"

export JAVA_OPTS="-Xms256m -Xmx512m"
export JAVA_HOME=/Library/Java/Home

SERVERPATH="/opt/local/bin /opt/local/lib/postgresql82/bin /Users/jvinding/projects/lm-scripts"

export WORKSPACE=/Users/jvinding/projects

export SVN_ROOT=https://build.corp.localmatters.com/subversion/DestinationSearch

export CATALINA_HOME=/usr/local/tomcat
export CATALINA_OPTS="-XX:MaxPermSize=160m -Djava.awt.headless=true -ea:com.localmatters... -ea:com.aptas... -Dcom.sun.management.jmxremote.port=1099 -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false -Dorg.apache.tomcat.util.buf.UDecoder.ALLOW_ENCODED_SLASH=true -Dorg.apache.catalina.connector.CoyoteAdapter.ALLOW_BACKSLASH=true"

. ~/Environment/git
. ~/Environment/git-completion.bash
. ~/Environment/tomcat


setcli() {
    export CLIENT=$1;
    echo "CLIENT=$CLIENT";
    goc
}
alias lm='setcli lm'
alias lmre='setcli lmre'
alias cl='setcli ds-core-lib'
alias cw='setcli ds-core-web'
alias lw='setcli lm-core-web'
alias ew='setcli ed-core-web'
alias ec='setcli ed-core'
alias ssw='setcli self-serve-web'
alias tnz='setcli tnz'
alias edfi='setcli edfi'
alias tas='setcli ed-tas-ds'

#
#
#
alias ss='svn status'
alias ssu='svn status -u'
alias sup='[ -d .svn ] && svn up || gup'

clientmvn() {
    pushd $WORKSPACE/$CLIENT
    mvn $*
    popd
}
alias mvncp='clientmvn clean package && cpwar'
alias mvncpnt='clientmvn -Dmaven.test.skip=true clean package && cpwar'
alias mvnci='clientmvn clean install'
alias mvncint='clientmvn -Dmaven.test.skip=true clean install'

#
#
#
switch_dep_branch() {
    local proj=$1
    local branch=$2
    local projbranch=
    if git_has_branch "$1$2"; then
        projbranch="$1$2"
    elif git_has_branch $1; then
        projbranch=$1
    fi

    if [ -z "$projbranch" ]; then
        echo -e "\033[1;31m$CLIENT does not have a branch called $proj$branch or $proj\033[0;0m"
        return 1
    elif git_is_on_branch $projbranch; then
        echo "$CLIENT is already on $projbranch"
    elif git co -q $projbranch > /dev/null; then
        echo "$CLIENT switched to $projbranch"
    else
        echo -e "\033[1;31m$CLIENT could not switch to $projbranch\033[0;0m"
        return 1
    fi
}
dep_list() {
    local all=$1
    local lib=$2
    local edsa=$3

    if [ "$all" == "true" ]; then
        echo -n "lm-util lm-mvc lm-taglib self-serve-lib reviews "
    fi

    if [ "$lib" == "true" ] || [ "$all" == "true" ]; then
        echo -n "ds-core-lib "
        if [ "$edsa" == "true" ]; then
            echo -n "ed-core "
        fi
    fi

    echo -n "lm-core-web ds-core-web"

    if [ "$edsa" == "true" ]; then
        echo -n " ed-core-web"
    fi
}
switch_deps() {
    local lib=false
    local all=false
    local edsa=false

    local OPTIND=0
    while getopts "ael" opt; do
        case $opt in
            a ) all=true;;
            e ) edsa=true;;
            l ) lib=true;;
        esac
    done
    shift $(( $OPTIND - 1 ));

    local proj=$1
    if [ -z "$proj" ]; then
        proj=${CLIENT:=lm}
    fi

    setcli $proj > /dev/null

    local branch=$2
    if [ -z "$branch" ]; then
        branch=$(git_get_branch)
    fi

    local deps=$(dep_list $all $lib $edsa)
    for p in $deps; do
        setcli $p > /dev/null && switch_dep_branch $proj $branch || { setcli $client; return 1; }
    done
    setcli $proj
}
build() {
    local lib=false
    local all=false
    local quick=false
    local edsa=false
    local switchdeps=false
#    local mvnargs=-DskipTests=true
    local mvnargs=-Dmaven.test.skip=true

    local OPTIND=0
    while getopts "tdaelq" opt; do
        case $opt in
            d ) switchdeps=true;;
            t ) mvnargs=;;
            a ) all=true;;
            e ) edsa=true;;
            l ) lib=true;;
            q ) quick=true;;
        esac
    done
    shift $(( $OPTIND - 1 ));

    local proj=$1
    if [ -z "$proj" ]; then
        proj=${CLIENT:=lm}
    fi

    setcli $proj > /dev/null

    local branch=$2
    if [ -z "$branch" ]; then
        branch=$(git_get_branch)
    fi

    if [ "$quick" != "true" ]; then
        local deps=$(dep_list $all $lib $edsa)
        if [ "$switchdeps" == "true" ]; then
            for p in $deps; do
                setcli $p > /dev/null && switch_dep_branch $proj $branch || return 1
            done
        fi

        for p in $deps; do
            setcli $p && sup && mvn $mvnargs clean install || { echo; echo -e "\033[1;31mfailed in $p\033[0;0m"; setcli $proj; return 1; }
        done
    fi

    setcli $proj

    if ! [ -z "$branch" ]; then
        if ! git_has_branch $branch; then
            echo -e "\033[1;31m$CLIENT does not have branch $branch\033[0;0m"
            return 1
        elif ! git_is_on_branch $branch; then
            git co $branch || { echo -e "\033[1;31m$proj could not switch to $branch\033[0;0m"; return 1; }
        fi
    fi

    mvn $mvnargs clean package && cpwar || { echo; echo -e "\033[1;31mfailed in $proj\033[0;0m"; return 1; }

    echo -e "\033[1;32mBuilt $proj successfully\033[0;0m"
}
#
# maven/svn dirs
#
cpwar() { cp $WORKSPACE/$CLIENT/target/*.war $CATALINA_HOME/webapps; }
goc() {
    if [ -d $WORKSPACE/$CLIENT/$1 ]; then
        cd $WORKSPACE/$CLIENT/$1
    else
        cd $WORKSPACE
    fi
}
gow() { goc src/main/webapp/$1; }
alias gowjsp='gow WEB-INF/jsp'
alias gojs='gow js'
alias gocss='gow css'
alias gojsp='gow WEB-INF/jsp'

## twx() { touch $CATALINA_HOME/webapps/${CLIENT}DS/WEB-INF/web.xml; }

alias lc='while ! ldt; do sleep 1; done;'

alias lat='tail -100f `ls -1 $CATALINA_HOME/logs/localhost_access* | tail -1`'

alias homev='vncviewer -geometry=1024x768 -FullColor -PreferredEncoding=ZRLE -ZlibLevel=9 -via 24.8.98.73 localhost:0'

alias ie5='/usr/bin/vncviewer --ZlibLevel=9 --Shared 10.4.0.59:0'
alias mac='/usr/bin/vncviewer --ZlibLevel=9 --Shared 10.4.1.169'

alias rsreload='java -jar ~/bin/jmx.jar - localhost:1099 DestinationSearch:Context=${CLIENT}ds,name=ResourceSet reloadConfiguration'
alias rsnofilter='java -jar ~/bin/jmx.jar - localhost:1099 DestinationSearch:Context=${CLIENT}ds,Class=ConcatenatingFilterSet,name=javascriptFilterSet setFilteringEnabledString=false'

svn_checkout() {
    dir=$2
    if [ -z "$file" ]; then
        dir=${1%%/trunk}
        dir=${dir##*/}
    fi
    svn co https://build.corp.localmatters.com/subversion/DestinationSearch/$1 $dir
}

# sudo launchctl load /Library/LaunchDaemons/org.postgresql.dbms.plist

alias mysql=mysql5